Thursday 2019-10-31

  STOPWATCH: 7:49


  WOBBLE PROJECT

    - experimenting with long-press
      - found a reference for timing measurement: https://stackoverflow.com/a/41077420

      - also, using ui::Button addTouchEventListener for short vs long press timing:
        _button_gear->addTouchEventListener([&](cocos2d::Ref* sender, ui::Widget::TouchEventType type)

    - highlight ACTIVE button
      - needs different color and additional logic

    - HUD test ads
      - initial placement on top and bottom @ 320x100
      - fadeout with other buttons
      - still needs additional logic for dynamic ui

    - fixed bug on multi-gear set B fadeout

    - graphics updated

    - HUD fadeout time changes from initial state has SHORT FADEOUT TIME to non-initial state LONG FADEOUT TIME (3-5x time) - user might be contemplating what to do and fadeout too early I think would be annoying

----------
Wednesday 2019-10-30

  STOPWATCH: 3:22


  WOBBLE PROJECT

    - graphics updated
      - more robust colors, dummy ads, "active" graphic

    - hud menu animations for gear / multi-gear
      - always leave back button in top left corner as part of button sets; ALWAYS ACCESSIBLE
      + gear (primary) to open close HUD buttons

      - multi-gears button sets
        SET A: back, eye, auto-wobble, mass, spring,
        SET B: back, light, gyro, accelerometer, rotate

    - separated HUDLayer class into it's own cpp files as the RUBEScene file was becoming unwieldingly large
      - somehow avoided circular include issue using forward declaration + moving the HUDLayer include into to RUBEScene.cpp file

----------
Tuesday 2019-10-29

  STOPWATCH: 4:21


  WOBBLE PROJECT - hud menu animations

----------
Sunday 2019-10-27

  STOPWATCH: 3:23


  WOBBLE PROJECT

    hud menu animations
      - animation, visibility and enable logic
      - animation Sequences:: action logic is independent for each button to allow staggering visual effect

----------
Friday 2019-10-25

  STOPWATCH: 5:22


  WOBBLE PROJECT

    hud menu
      - animation for "quick settings" main buttons
      - hud states logic
      - multi-gears button animations

----------
Thursday 2019-10-24

  STOPWATCH: 7:37


  WOBBLE PROJECT

    add icons to HUD layer init
      - positioning and to get a sense of overall look
      - resize icons slightly larger

    draw new hud icons - light bulb (light sensor), paint brush (visual settings)

    *NOTE: after looking at "MOMO'S DRESSUP", considering lowering resolution on images to be SLIGHTLY PIXELATED
      - good visual style and substantial asset size reduction

----------
Wednesday 2019-10-23

  STOPWATCH: 7:22


  WOBBLE PROJECT

    draw new hud icons - multi-gears, rotate, lock


    IMPLEMENTATION FOR HUD OVERLAY BUTTONS AND SLIDERS
      - not exactly sure how I want to approach this HUD layer..mostly because the more I think about it, the more I want multiple HUD items appearing/disappearing in response to user interaction ("quick settings" vertical button strip), slider panel, customization strip
      * I can see this evolving to include a light sensor button, image options, image effects, music(?)

      CURRENT IMPLEMENTATION:

        "BACK" BUTTON (return to main menu)
        "GEAR" BUTTON (scene settings)

      PLAN:

        PRIMARY BUTTONS

          "BACK" BUTTON (return to main menu)

          "GEAR" BUTTON (vertical icon menu appears on the current scene - "QUICK SETTINGS")
            - spinning gear "mechanical" visual effect

            - "QUICK SETTINGS" buttons appear from the right
              - one-by-one, from top to bottom, each icon movement is slightly delayed from the previous
                OR all icons move in unison
              - not sure about a background colored panel for better visibility; background panel slides in from the sides slightly before (or after) the icons

            - 2nd press of gear - reverse spinning gear and hide "QUICK SETTINGS" using similar visual effect
            * if "QUICK SETTINGS" is visible, either cancel auto-fadeout or make the increase auto-fadeout delay time

        "QUICK SETTINGS" VERTICAL BUTTON STRIP (RIGHT)

          "MULTI-GEAR" BUTTON (open "SENSOR HUD SETTINGS")
            - display "SENSOR HUD SETTINGS" VERTICAL BUTTON STRIP
            - highlight when secondary is open

          "PICTURE/PAINT BRUSH" BUTTON (open "PICTURE CUSTOMIZATIONS")
            - display "VISUAL CUSTOMIZATIONS" VERTICAL BUTTON STRIP
            - highlight when secondary is open

          "HAND" BUTTON (enter "PAN AND ZOOM" mode)
            - enter a mode that allow pinch-zoom and/or panning of content

            - should somehow be visually obvious.. color overlay or text..
              - highlight when mode is active

            - disable box2d body interaction while in this mode
            - press hand or any other button to exit pan/zoom mode

          "QUESTION MARK" BUTTON (new scene explaining button functions)
            - show tooltip for relevant icons


        "SENSOR HUD SETTINGS" VERTICAL BUTTON STRIP (LEFT)

          "ROTATE" BUTTON (switches portrait to landscape view of current scene?)
            - hide/disable for now, phase 2.. as this is a bit complex
            - quick application setting

          "KEEP SCREEN ON" BUTTON (keep screen on - on/off)
            - application setting

          "AUTO-WOBBLE" BUTTON (auto-wobble - on/off)
            - long-press to access auto-wobble section of scene settings (simple view)

          "GYROSCOPE" BUTTON (gyroscope - on/off)
            - hide if unavailable
            - long-press to access gyroscope section of scene settings (simple view)

          "ACCELEROMETER" BUTTON (accelerometer - on/off)
            - long-press to access accelerometer section of scene settings (simple view)

          "LIGHT BULB" BUTTON (light sensor - on/off)
            - hide if unused by dashboard toy

          "MASS" BUTTON (show "BOBBLE MASS" SLIDER)
            - hide existing bottom panels, show slider panel on the bottom display area
            - highlight when slider panel is open

          "SPRING" BUTTON (show "MOTION RESPONSE" SLIDER on the current scene)
            - hide existing bottom panels, show slider panel on the bottom display area
            - highlight when slider panel is open


        "VISUAL CUSTOMIZATIONS" VERTICAL BUTTON STRIP (LEFT)
          TODO - SCENE-SPECIFIC icon buttons to open bottom panel for:
            "BACKGROUND", "POSES", "HAIR", "SKIN COLOR", "HAIR COLOR", "ACCESSORIES", etc.


        BOTTOM PANEL

          AD STRIP
            - display when primary buttons visible and not in use by other functionality
            - maybe top(?)

          SLIDER PANELS
            - spring frequency motion response
            - bobble mass

          IMAGE OPTIONS
            - backgrounds, poses, hair, color, accessories, text options
          
----------
Tuesday 2019-10-22

  STOPWATCH: 3:10


  IDEAS
    - separate motion filter and flag for gyroscope (under gyroscope settings)
      - move existing motion filter option to accelerometer settings

    - gyroscope z-axis as an option to control wobble (right/left/u-turns)
    - sudden jerk on y-axis for better bump response (not likely though)
    - 0.6 torque on sandals auto-wobble
    - auto-wobble separate joint characteristics? (just a thought)
    - gyro test - create scene with duplicate functionality to wobble project that can load custom 3d/obj files
    - googly eyes scene


  WOBBLE PROJECT

    draw new hud icons - mass, spring, hand
    shorten slider slightly

----------
Sunday 2019-10-20

  STOPWATCH: 7:36


  WOBBLE PROJECT

    BUG FIXES
      settings slider
        - FIXED A BUG with the slider not being at the correct % initially for frequency defaults from RUBE -- I had to create a function to lock frequencies to discrete values
        - steps not discrete enough and values become off converting from slider-to-frequency and vice-versa; not sure why..


    RANGE VALUES AROUND THE DEFAULTS
      - using frequency and mass for simplified HUD slider controls
      * remember, these defaults have to be changed directly in the RUBE scene
      * min/max values - set these in the appropriate scene as constants

                              frequency                       mass
      scene                   default     min       max       default     min       max
      hang loose              1.2         1.0       2.0       -           -         -
      hula girl               3.9         2.8       5.1       0.30        0.10      1.00
      hula girl (4-weld)      7.5         6.0       8.0       0.30        0.10      0.60
      hula girl (multi-joint) 4.1         2.8       5.1       0.30        0.10      1.00
      hello kitty hula        2.6         2.0       5.0       0.30        0.10      1.00
      beach sandals           2.2         1.5       3.5       0.80        0.10      1.00

----------
Friday 2019-10-18

  STOPWATCH: 1:28


  WOBBLE PROJECT

    - reasonable defaults created for the various scenes

----------
Thursday 2019-10-17

  STOPWATCH: 7:17

  WOBBLE PROJECT
    - EXPERIMENT WITH DEFAULTS FOR OTHER SCENES IN DESKTOP STATIONARY ENVIRONMENT
      - use these as driving test defaults

    - defaults based on box2d physics (joints, angles, density/mass) are taken directly from the RUBE JSON file
      - these values should be changed in RUBE only after enough testing is done

    - bug fix: sandals scene - reference angle redefinition fixed frequency/damping not being set to new adjustments

    - watch videos
      - from the videos and settings I used it's difficult to tell what is better ATM, but here are a few things to change in further testing:
        a) exact same test route: storage -> left @ mailbox -> left toward main road -> u -> u -> storage
        b) when recording video, move camera higher to get speedometer and road in the frame

----------
Wednesday 2019-10-16

  STOPWATCH: 3:49


  WOBBLE PROJECT
    - watch videos
      - future recording needs to be
        a) slightly higher to record speedometer
        b) angled just 1-2 degrees ccw to have better level
      
      * USE VLC POST PROCESSING
        - fixes angle, crops to a better frame size, and MUCH SMALLER FILE SIZE (122.94MB -> 18.10MB)
          - https://www.vlchelp.com/edit-video-apply-effects-filters-save-permanently-vlc
          - https://steemit.com/utopian-io/@ted7/how-to-crop-video-using-vlc-media-player
          - above URLs helped get started, but modified for my use-case

        STEPS:
          1) tools > effects and filters (ctrl+E) => video effects
            a) crop tab; adjust and RECORD VALUES
            b) geometry tab => rotate; adjust
          2) tools > preferences (ctrl+P) => show settings => all
            a) select "filters"
            b) check "rotate video filter" (already a default I think) and "video cropping filter"
            c) expand "filter"
            d) select "cropadd" and put in values from step 1-a
          3) media => convert/save (ctrl+R)
            a) "+ add"; select source video
            b) press "convert/save" button
            c) select "convert"; select "profile" - "video - h.264 + mp3 (mp4)"
            d) click wrench icon => "video codec" tab => "filters" tab
            e) select "rotate video filter" and "video cropping filter" + save
            f) copy source video to a another file (serves as destination container) and use browse button to select
            g) press start (and sometimes press play button to initiate conversion)
          4) tools > preferences (ctrl+P) => reset preferences
            a) close and re-open vlc
            *** THIS IS AN IMPORTANT STEP ***

----------
Tuesday 2019-10-15

  STOPWATCH: 3:09


  WOBBLE PROJECT

    drive motion tests
      - "hang loose hawaii" scenario
        - 0-10mph with speed bumps, 0-50mph local, camera video
        - one key piece of info - velocity constraint only works on sensor feedback, not on the auto-wobble
          - FIXED: applied to the "hang loose hawaii" scenario and tested OK
          - FIXED: applied to other physics scenes, the sandals scene is a bit trickier though
        
      * the "auto-wobble" feature ALMOST needs to be tested independently of the drive motion tests, except for the STOP/GO and AUTO-WOBBLE DELAY

    fixed an issue with the application settings collapsible sections not resetting

----------
Monday 2019-10-14

  STOPWATCH: 3:05


  WOBBLE PROJECT

    MOTION TESTS
      auto-wobble
        - "sensor threshold" min 0.05 -> 0.01

      updated test data sheet
        - filled in default settings for all test scenes

      planned setup:
        camera recording video (no ois)
        slow driving (parking lot)
        medium driving (0-50MPH)
        default settings for scenes - "Hang Loose" and "Hula Girl (Single Weld)"
        only for motion testing

      initial drive test
        - ~5PM
        - 11:30 (720p) @710.8MB ==> ~61.81MB/min
        - 0-50MPH (apartment complex and main road)
        - UNABLE TO SEE SPEEDOMETER
        - camera setup jostles recording a bit, but stays in place
        - maybe higher orientation, more anchors, and at night

----------
Sunday 2019-10-13

  STOPWATCH: 3:23


  WOBBLE PROJECT

    MOTION TESTS
      - created a test data sheet

      - tested video recording on a digital camera
        - I want to record the motion tests while driving with some audio notes


    misc bug fixes
      - reference angle
      - wrong key label on combine xy
      - forgot to persist the "enable velocity threshold constraint" parameter

----------
Friday 2019-10-11

  STOPWATCH: 3:32


  read through versionxx.txt files, re-arrange and determine next step


  WOBBLE PROJECT

    limit angular velocity (per scene settings)
      * NOTE: this doesn't prevent the angular velocity from exceeding a threshold per se, but it does prevent additional torque / force from being applied once the threshold is reached

      - extensive modifications to updateAcceleration/updateGyro functions

      - NEEDS TESTING ON SOME SCENES

----------
Thursday 2019-10-10

  STOPWATCH: 6:21


  WOBBLE PROJECT

    limit angular velocity (per scene settings)
      - mostly implemented

    application settings collapsible sections
      - "keep screen on" left as is -- just one option

    scene settings collapsible sections
      - node elements (used for background color, when needed) doesn't have a click event
      - used a ui:Widget that's invisible (from what I can tell) for controlling the accordion section "click"

----------
Wednesday 2019-10-09

  STOPWATCH: 8:21


  WOBBLE PROJECT

    settings collapsible sections (start)

    SCENE SETTING: flags for scene settings visibility instead of multiple switch statements

    begin intermittent wobble test on the "hang loose" scene -- ON HOLD

----------
Tuesday 2019-10-08

  STOPWATCH: 3:15


  WOBBLE PROJECT

    settings slider
      - had to use button user data as the panel* couldn't be passed like the slider onchange()
      - fixed a bug with the slider not being at the correct % initially

----------
Friday 2019-10-04

  STOPWATCH: 8:51


  WOBBLE PROJECT

    settings slider
      - got +/- fine-tuning buttons on the slider panel

      TODO
        - it needs a little more of a space offset from the slider itself
        - the enable/disable code should change the color and ability for the button click event
        - change the default color to match checkboxes (lighter blue)
        - logic to control slider fine-tuning

    custom scene settings
      - completed for persist and restore
      - not throughly tested though

      * scene settings editor is still monolithic with a lot of switch statements
        - once "fixed", it should de-couple the specific scenes a bit more
        - maybe a static struct in SceneSettings.h/.cpp, with flags to turn sections on/off instead
          - bookmarked - something similar to persist/restore function pointer

      * scene data is also monolithic
        - there's a lot of common data, but in general settings that are not used are just ignored
        - this is probably the best and easiest approach, but just be smart/flexible going forward?

----------
Thursday 2019-10-03

  STOPWATCH: 3:09


  WOBBLE PROJECT

    custom scene settings
      working on function pointers for custom scene settings

      restoreCustomSceneSettings (restore persisted data from map OR default data)
      saveCustomSceneSettings (modify map reference to be saved)

      COMMENTS: ultimately I hope this reduces the growing size of the save/restore (common) scene settings and partitions the logic a bit better


----------
Wednesday 2019-10-02

  STOPWATCH: 9:20


  SEPTEMBER STATS:

    days total:   186/372 based   => 50.0%
    days:         22/30 days      => 73%
    
    hours total:  42:50
    hours:        42:50 (from 9/17/2019)


  WOBBLE PROJECT

    custom scene settings
      - initial test using STATIC struct on the sandals layer; other methods with member function pointers started getting esoteric syntax and not even sure that was the best route anyways
      - leaning toward using function pointer similar to existing

    enable advertising flag moved to application settings

    scene settings
      - weld joint reference angle
        - limited to the sandals scene, scalar value mirrored for both feet
        - a bit more complex due to having to destroy/re-create the joints to modify this value

      - mass of primary body (I wasn't sure about adding this one, but I'm glad I did as it has a dramatic impact on the overall motion response)
        * for the 4-weld "spring" hula dance, the ratio of primary body vs spring components masses has a profound impact on overall body motion; I considered adding a slider to adjust the mass of each spring component body, but I'm leaving this alone to the default value set in the RUBE file

    application settings
      - on/off setting for motion filter "threshold" used for the standard accelerometer mode
      - forced linear accelerometer y-axis "gravity" on/off setting

    - for the MULTI-ORIENTATION feature, I would need to REDESIGN the settings screens and the HUD overlay in addition to the box2d scenes
        - this will take some thought and re-layout; a lot of work I think
        - because of this, the orientation feature needs to be pushed back to 2.0+