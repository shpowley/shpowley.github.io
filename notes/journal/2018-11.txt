----------
Thursday 2018-11-29

  - installed android sdk 4.4 to enable testing on another device - samsung galaxy s3. two applications seemed to run fine

  - researched some common smartphone device resolutions to determine how they stack up against 1) the default low/mid/high resolutions used by the cocos2d-x framework and 2) the images provided by the book "Building Android Games with Cocos2D-x" ch.1 source code

    - considering the provided images and typical smartphone resolutions, only the low and mid size images really would work - refactoring the code accordingly

    - the accelerometer-based "bobble" apps should be highly customized
      - if using a background image, I think using "ResolutionPolicy::NO_BORDER" would be best, because cutting off portions of the background should be ok
      - the actual foreground images and physics objects should somehow be re-sizeable

  - menu + ch.1 sample is working - return to reading and add chapters as reading progresses

----------
Tuesday 2018-11-27

  - attempting to refactor AppDelegate.cpp screen dynamic resolution code automatically generated by cocos2d-x framework to the code from ch.1

    - book ch.1 AppDelegate.cpp > applicationDidFinishLaunching() > glview->setFrameSize(480, 800);
      - this doesn't appear to do anything

    - added a scene background color to (hopefully) visually understand impact of code changes
      - https://discuss.cocos2d-x.org/t/change-background-color-of-scene/42858/2 (change scene bg color)

    - playing w/ ResolutionPolicy::NO_BORDER to ::SHOW_ALL shows that the default ::NO_BORDER actually cuts off portions of the left and right, while ::SHOW_ALL displays the entire design area, but leaves empty top/bottom black portions. so neither setting is ideal, especially considering the bg image and device resolution do not match.
      - test device resolution (moto-g gen 1) - w: 720, h: 1280
      - ch.1 background image                 - w: 768, h: 1280

      - ResolutionPolicy::SHOW_ALL I think would be best in this scenario, but should be modified to something more appropriate going forward. best to match the device, if possible.

----------
Monday 2018-11-26

  - decided to create an android application to test out each chapter's code from the book "Building Android Games with Cocos2D-x". this will have a main menu with a menu option to launch each chapter's code
    - this will allow for better understanding of the code being read and see it in action
    - possibly discern coding differences from a more recent version of the cocos2d-x framework

  - progress: completed skeleton project with selectable menu items (ch.1 - 8)

----------
Saturday 2018-11-24

  - took notes on PDF book "Building Android Games with Cocos2D-x"
    - stopped @ ch.3: understanding game physics

----------
Tuesday 2018-11-20

  - added an additional "blank" scene to contain physics bodies test
  - planning to use built-in physics engine "chipmunk" and if that has problems, I'll try Box2d

----------
Sunday 2018-11-18

  - modified test project to have a menu select scene & accelerometer xyz measurement scene
    - add additional scenes from the menu select scene

----------
Saturday 2018-11-17

  - "simple" test to display accelerometer-x in log and label

  - compile warning persists even after trying some fixes searching google
    - "WARNING: ABIs [armeabi-v7a,armeabi] set by 'android.injected.build.abi' gradle flag contained 'ARMEABI' not targeted by this project."

----------
Friday 2018-11-16

  - migrate notes to Google Drive (easier to access from different environments)
    1) developer daily journal
    2) to do list
    3) cocos2D-x notes
    4) books

  - optimize template project as much as possible
    - REMEMBER TO UPDATE TEMPLATE W/ VERSION UPDATES