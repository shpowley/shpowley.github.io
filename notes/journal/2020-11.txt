CORONAVIRUS TOTAL INFECTED: 46.82 MILLION (11/1/2020)
CORONAVIRUS TOTAL INFECTED: 41.02 MILLION (10/20/2020)
CORONAVIRUS TOTAL INFECTED: 22.78 MILLION (8/21/2020)
CORONAVIRUS TOTAL INFECTED: 14.82 MILLION (7/21/2020)

3d ideas: butterfly wings open/close, spider walk anim, spider dangling, rubber duck

----------
Sunday 2020-11-01

  LIBGDX - UDACITY: 2D GAME DEVELOPMENT WITH LIBGDX (FREE)
    
    - getting familiar with running pre-made projects


    COMMENTS

      - as mentioned earlier, this is made by google

      - the intro project seems to take a different approach than what's advised by the libgdx wiki ..still too early to tell.

      - canned projects have a lot of older dependencies and code. for the very first intro project, we just make sure everything is setup correctly and runs fine. trying to update to the latest gradle on this projects breaks too much.

      - I honestly don't remember working with libgdx much..

      - I never knew about the correct usage of android studio run configurations


----------
Tuesday 2020-11-03

  BLENDER (UDEMY)
    * UDEMY take notes in the actual video @ timestamps is handy

----------
Wednesday 2020-11-04

  LIBGDX (UDACITY)

----------
Thursday 2020-11-05

  - training material on each of these topics is vast and time consuming.

    BLENDER is a skill I can use in any game engine.
    LIBGDX is the engine I think I need for many of my personal projects that I want to publish.
    UNREAL.. somewhat for fun I guess, but we'll see where this goes..

    COCOS2D-X - I really wanted to stick with it, but I know it's limitations. I can still use it for prototyping RUBE/BOX2D and for reference when porting to LIBGDX


  UNREAL ENGINE (UDEMY)
    - still getting used to unreal navigation UI and have to relearn it just after a few days

----------
Friday 2020-11-06

  UNREAL ENGINE (UDEMY)
    - finished BullCows word game

----------
Sunday 2020-11-08

  LIBGDX (UDACITY)
    - studying mostly input today (keys, mouse, touch)

    * interesting to note that the libGDX framework is LIMITED TO BASIC SENSORS (accelerometer, compass, gyro..)
      - NO linear accleration, light, proximity, steps, proximity, etc. -- all native to android.. 

      - possibly re-use code from cocos2d-x wobble project, but..
        - would custom sensor logic go into the "android" java module?
        - how portable is this code to IOS?

----------
Monday 2020-11-09

  LIBGDX (UDACITY)
    - accelerometer (built-in)
    - libGDX project setup

    NOTES
      - default android projects don't go completely fullscreen yet
      - also, default orientation is landscape


  *********** glTF 3D FILE FORMAT ***********
    * HOPEFULLY THIS MAKES IT SO I DON'T HAVE TO DELVE INTO LEARNING OPENGL SHADERS
    - slowly visible on my radar when researching "metallic" materials duing .FBX and cocos2d-x tests
    - this is the new 3d file format supplanting .OBJ/.FBX and making in-roads throughout tech industry
    - native blender 2.8x+ support, native godot, libGDX add-on support, unreal engine add-on support
    - there are also c++ libraries in case I wanted to attempt it with cocos2d-x

----------
Tuesday 2020-11-09

  LIBGDX (UDACITY)
    - flesh out icicles game