----------
Friday 2019-10-11

  STOPWATCH:


  NEXT: read through versionxx.txt files, re-arrange and determine next step


  WOBBLE PROJECT

    limit angular velocity (per scene settings)
      * NOTE: this doesn't prevent the angular velocity from exceeding a threshold per se, but it does prevent additional torque / force from being applied when the threshold is reached

      - extensive modification to updateAcceleration/Gyro functions

      - NEEDS TESTING ON SOME SCENES

----------
Thursday 2019-10-10

  STOPWATCH: 6:21


  WOBBLE PROJECT

    limit angular velocity (per scene settings)
      - mostly implemented

    application settings collapsible sections
      - "keep screen on" left as is -- just one option

    scene settings collapsible sections
      - node elements (used for background color, when needed) doesn't have a click event
      - used a ui:Widget that's invisible (from what I can tell) for controlling the accordion section "click"

----------
Wednesday 2019-10-09

  STOPWATCH: 8:21


  WOBBLE PROJECT

    settings collapsible sections (start)

    SCENE SETTING: flags for scene settings visibility instead of multiple switch statements

    begin intermittent wobble test on the "hang loose" scene -- ON HOLD

----------
Tuesday 2019-10-08

  STOPWATCH: 3:15


  WOBBLE PROJECT

    settings slider
      - had to use button user data as the panel* couldn't be passed like the slider onchange()
      - fixed a bug with the slider not being at the correct % initially

----------
Friday 2019-10-04

  STOPWATCH: 8:51


  WOBBLE PROJECT

    settings slider
      - got +/- fine-tuning buttons on the slider panel

      TODO
        - it needs a little more of a space offset from the slider itself
        - the enable/disable code should change the color and ability for the button click event
        - change the default color to match checkboxes (lighter blue)
        - logic to control slider fine-tuning

    custom scene settings
      - completed for persist and restore
      - not throughly tested though

      * scene settings editor is still monolithic with a lot of switch statements
        - once "fixed", it should de-couple the specific scenes a bit more
        - maybe a static struct in SceneSettings.h/.cpp, with flags to turn sections on/off instead
          - bookmarked - something similar to persist/restore function pointer

      * scene data is also monolithic
        - there's a lot of common data, but in general settings that are not used are just ignored
        - this is probably the best and easiest approach, but just be smart/flexible going forward?

----------
Thursday 2019-10-03

  STOPWATCH: 3:09


  WOBBLE PROJECT

    custom scene settings
      working on function pointers for custom scene settings

      restoreCustomSceneSettings (restore persisted data from map OR default data)
      saveCustomSceneSettings (modify map reference to be saved)

      COMMENTS: ultimately I hope this reduces the growing size of the save/restore (common) scene settings and partitions the logic a bit better


----------
Wednesday 2019-10-02

  STOPWATCH: 9:20


  SEPTEMBER STATS:

    days total:   186/372 based   => 50.0%
    days:         22/30 days      => 73%
    
    hours total:  42:50
    hours:        42:50 (from 9/17/2019)


  WOBBLE PROJECT

    custom scene settings
      - initial test using STATIC struct on the sandals layer; other methods with member function pointers started getting esoteric syntax and not even sure that was the best route anyways
      - leaning toward using function pointer similar to existing

    enable advertising flag moved to application settings

    scene settings
      - weld joint reference angle
        - limited to the sandals scene, scalar value mirrored for both feet
        - a bit more complex due to having to destroy/re-create the joints to modify this value

      - mass of primary body (I wasn't sure about adding this one, but I'm glad I did as it has a dramatic impact on the overall motion response)
        * for the 4-weld "spring" hula dance, the ratio of primary body vs spring components masses has a profound impact on overall body motion; I considered adding a slider to adjust the mass of each spring component body, but I'm leaving this alone to the default value set in the RUBE file

    application settings
      - on/off setting for motion filter "threshold" used for the standard accelerometer mode
      - forced linear accelerometer y-axis "gravity" on/off setting

    - for the MULTI-ORIENTATION feature, I would need to REDESIGN the settings screens and the HUD overlay in addition to the box2d scenes
        - this will take some thought and re-layout; a lot of work I think
        - because of this, the orientation feature needs to be pushed back to 2.0+