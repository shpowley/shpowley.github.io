  GOALS
    - scene settings
    - overlay settings
    - touch overlay button (pan + zoom)
    - simplified movement setting(s)

----------
Friday 2019-09-06

  NEXT

    - HUDMenuLayer::init() change hard-coded png names to "static constexpr const char*" like GameManager.h

    - use AppSettingsScene.h as a template example for scene settings
      - rename AppSettingsScene.h/.cpp to AppSettings.h/.cpp
      - create new files SceneSettings.h/.cpp to handle all the scenes
      
      - see Monday 2019-08-26 AND Wednesday 2019-08-28 for clarification
        - also check RUBELayer::restoreSceneSettings()


  HUD MENU SETTINGS OVERLAY

    - added gear icon for scene settings

    - testing the show / fade-out effect, this didn't work as expected as subsequent touches didn't reset the fadeout timer -- this was fixed. encountered some issues with the cocos2dx scheduleOnce() function as I could only get lambda expressions to work
      - added distinct onTouchBegan / onTouchEnded code to handle this; code ended up "cleaner" this way removing duplicate lambda expression code

----------
Thursday 2019-09-05

  HUD MENU SETTINGS OVERLAY

    - HUD Layer is initially invisible, with HUD Layer items inaccessible. HUD layer "Fade-In" effect on touch

    - added a HUD Layer "Fade-Out" effect after some delay AND no user interaction

----------
Wednesday 2019-09-04

  HUD MENU SETTINGS OVERLAY
  
    - added back button functionality

    - this implementation uses a function pointer stored in the GameManager and this solution GREATLY SIMPLIFIED the overall logic for the HUDMenuLayer AND the RUBEScene-inherited scenes
      - this was a bit hairy because the "back button" implementation was scattered among the various RUBELayers and accessing this from the HUDMenuLayer proved difficult due to visibility constraints, etc.

----------
Tuesday 2019-09-03

  MISC
    - new journal for September 2019 created

    - stats:
        - total: 164/342 based => 48.0%
        - august 2019: 10/31 days => 32.3%


  HUD MENU SETTINGS OVERLAY
  
    - added back button ui-widget


  BOBBLE APP DETOUR - ACCELEROMETER-CONTROLLED "BALL" IN A MAZE

    - decided to take a detour from the bobble app as a diversion

    - tried using the RUBE auto-trace feature to generate mazes

      - this was a good refresher, but unfortunately the maze image I found was too complex using the steps outlined in the RUBE how-to; creating the control points alone took a while and only scatched the surface in terms of the ideal fixture needed for a workable maze -- and this was only a "simple" maze

      - I ended up creating a fixture and modifying the vertices.. this is in the early stages, but creates a cleaner end product I suppose; this technique is workable, but still not a quick process

      * another option is creating a bunch of rectangular fixtures on the same body - duplicating / moving / re-sizing
        pros: this might be faster, more consistent maze wall widths(?)
        cons: creates a bunch of fixtures

----------
Sunday 2019-09-01

  rewatching sampler video
    https://youtu.be/O68lFQWe7-A?t=640
    https://youtu.be/O68lFQWe7-A?t=1580