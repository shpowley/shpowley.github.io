SCENE SETTINGS (simplified, standard, advanced views)


- touch primary body should stop auto-wobble


- turtles scene: re-implement physics; swim animation, relatively fixed x/y, able to rotate; imagine this being similar to an actual desktop toy
  - options: large 1-2 and/or small 1-5


- intermittent auto-wobble
  @ HangLooseLayer::autoWobble()


- sandals
  - bug / issue: motion locked to one foot
  - auto-wobble motion - in-sync, mirror or random


- scene settings overlay
  - quick config scene overlay (see "Wednesday 2019-06-26")


- sensors - quick read: https://developer.android.com/guide/topics/sensors


- move all related spriteframe image textures, plist and json files should go in their own COCOS2D-X RESOURCE DIRECTORIES


- customized graphics


- auto-wobble: disable wobble check on physics body in question when user touches it
  - for numerous bodies in the same scene, only the body being touched should not auto-wobble


1.1+
ADVERTISING/MONETIZATION
  - see "journal.txt" Thursday 2018-12-13
  - continue with "Building Android Games with Cocos2d-x" p.122 starting at moving the mute button
  - free, banner ads, pay option, ad on menu, 2 "android robot" scenes free (hula dancer, surfer), unlock more scenes with video ad, sunglasses, skin tone, hair color
  - "unnie doll" ideas - https://play.google.com/store/apps/details?id=com.percent.mybest3


BUSINESS-RELATED
  - business license
  - business e-mail address
  - business bank account
  - app store account


- backup android projects to github (compacted)
  - customized RUBE-b2djson (d:\sdk\RUBE-b2djson)
  - other important/re-usable directories create separate .git repositories


- ability to change application or scene orientation; implemented in the app assets load, not in the os because of restrictions
  + RUBE import repercussions


- SCENE: hawaiian turtles
  - "flocking birds" algorithm AND/OR
  - MOTOR JOINT with my turtles scene (see journal Thursday 2019-05-30)
  - "swimming" animation or "pre-defined" swim movement
  - keep "crazy" and "falling" motion


- RUBE NORMALIZED DESIGN WIDTH/HEIGHT %
  - have another look at RUBE + programmatic usage to verify/refine the next steps
  - in RUBE editor use the faux phone image and grid to best-guess these values for the SUBJECT SPRITE(S)
  - custom property (see "Sunday 2019-06-30") to export
  - programmatic sizing to OPTIMAL design width/height in each scene
    - "optimal" means adjusting height based on the device screen height without exceeding device screen width
    * DESIGN EACH RUBE SCENCE TO A 4 "METER" BOX2D/RUBE SCREEN HEIGHT (see journal entry 2019-06-07.txt) using "phone_resolutions.png" as an overlay, scaled to 4 large RUBE grid unit tall, with scene content / phone overlay center-aligned to world 0,1 -- I *THINK* this is correct


- linear acceleration tests
  - low-pass vs hardware option to see the difference
  - simple physics object connected to the center screen via a distance or rope joint
  - possible tuning or scaling to get both to match
  - ideas: adjust filter.a, attempt higher sample rate, scene acceleration scaling


- SETTINGS / DEVELOPER MODE: 

  - "SECRET" METHOD TO ENABLE in app settings

  - AppSettingsLayer overrides
    1 - must be in advanced mode
    2 - scrollview scroll-to-bottom + scroll-to-top + tap title 7 times (in correct sequence)
    3 - auto reloads with dev options


- AUTO-WOBBLE
  - AT IDLE ONLY, ALWAYS (ignore sensors)


- main menu: animated background


- create a RUBE file with different types of joints and experiment with settings
  - every type of basic joint with labels describing what's what in the RUBE scene
  - composite joints with description labels
  - note my existing experiments
  - experiment in box2d testbed OR in app..


USER CONTROLLED TOUCH-BASED MOTION
  + box2d body induced wobble using a "FINGER TAP"
  + box2d induced world acceleration using a "FINGER SWIPE"
  + multi-touch? multiple mouse joints?
  - max length mouse joint OR tweak the mouse joint to break once the position is outside the body
  ? a SETTING OPTION of some sort (or maybe the collision filter) on box2d bodies to control if the body is controlled by touch input


NEW SCENES
  - dangling keychain
    - keychain items:
      - hawaiian t-shirt | dollar t-shirt
      - hula dancer | hang loose | palm tree | surfboard | license plate | turtle | sandals | hibiscus

  - hanging lei
    - hawaiian shirt + lei option
    - different color flower options
    - https://youtu.be/roXUvqdyyDU @ 0:23 lei and model


NEW SCENES
  - splash screen(s)
  - strong warning to not drive distracted (scene or layer) @ start-up
  - surfer
  - android hula
  - dangling lei
  - mermaid >>
  - tux logo + hawaiian shirt + sunglasses (sandals physics)